# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2020-03-12 21:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BookedSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_start', models.TimeField()),
                ('time_end', models.TimeField()),
                ('status', models.CharField(choices=[(b'BOOKED', b'booked'), (b'LOCKED', b'locked'), (b'STARTED', b'started'), (b'ENDED', b'ended'), (b'CANCELLED', b'cancelled')], max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=400)),
                ('rating', models.PositiveIntegerField()),
                ('reviewtype', models.CharField(choices=[(b'ANONYMOUS', b'anonymous'), (b'NONANONYMOUS', b'nonanonymous')], max_length=9)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainApp.BookedSlot')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('date', models.DateField()),
                ('time', models.TimeField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortBio', models.CharField(max_length=300)),
                ('rating', models.FloatField(default=0)),
                ('isActivated', models.BooleanField(default=True)),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='UnavailableSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_start', models.TimeField()),
                ('duration', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('avatar', models.ImageField(upload_to=b'avatar')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('contact', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
        ),
        migrations.CreateModel(
            name='ContractedTutor',
            fields=[
                ('tutor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.Tutor')),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('mainApp.tutor',),
        ),
        migrations.CreateModel(
            name='PrivateTutor',
            fields=[
                ('tutor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.Tutor')),
                ('rate', models.PositiveIntegerField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('mainApp.tutor',),
        ),
        migrations.CreateModel(
            name='SessionTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.Transaction')),
                ('transaction_nature', models.CharField(choices=[(b'SESSIONBOOKED', b'sessionBooked'), (b'SESSIONCANCELLED', b'sessionCancelled')], max_length=20)),
                ('tutorCharges', models.PositiveIntegerField()),
                ('commission', models.FloatField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('mainApp.transaction',),
        ),
        migrations.CreateModel(
            name='SpecialWallet',
            fields=[
                ('wallet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.Wallet')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('mainApp.wallet',),
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.Transaction')),
                ('transaction_nature', models.CharField(choices=[(b'FUNDSADDED', b'fundsAdded'), (b'FUNDSWITHDRAWN', b'fundsWithdrawn')], max_length=20)),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('mainApp.transaction',),
        ),
        migrations.AddField(
            model_name='wallet',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.wallet_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='user',
            name='wallet',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Wallet'),
        ),
        migrations.AddField(
            model_name='unavailableslot',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Tutor'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='course',
            field=models.ManyToManyField(blank=True, to='mainApp.Course'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.tutor_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='subject_tags',
            field=models.ManyToManyField(blank=True, to='mainApp.Tag'),
        ),
        migrations.AddField(
            model_name='tutor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainApp.User'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.transaction_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.User'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mainApp.User'),
        ),
        migrations.AddField(
            model_name='review',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Student'),
        ),
        migrations.AddField(
            model_name='review',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Tutor'),
        ),
        migrations.AddField(
            model_name='passwordtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.User'),
        ),
        migrations.AddField(
            model_name='course',
            name='university',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='mainApp.University'),
        ),
        migrations.AddField(
            model_name='bookedslot',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Student'),
        ),
        migrations.AddField(
            model_name='bookedslot',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.Tutor'),
        ),
        migrations.AddField(
            model_name='wallettransaction',
            name='wallet_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mainApp.Wallet'),
        ),
        migrations.AddField(
            model_name='sessiontransaction',
            name='booking_id',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='mainApp.BookedSlot'),
        ),
        migrations.AddField(
            model_name='sessiontransaction',
            name='other_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_party', to='mainApp.User'),
        ),
    ]
